name: DÃ©ploiement de la nouvelle version de l'application en release

on:
  push:
    branches:
      - main

jobs:

  build:
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set git user
        run: |
          git config --global user.email "davidcardigos@hotmail.fr"
          git config --global user.name "Davidcardig"

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Get version
        id: package
        run: echo "::set-output name=version::$(node -p "require('./package.json').version")"

      - name: Build application
        run: npm run build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with :
          name: build
          path: build/

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.package.outputs.version }}
          release_name: ${{ steps.package.outputs.version }}
          body: |
            New changes are available
          draft: false
          prerelease: false

  deploy:
    runs-on: windows-latest
    needs: build

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: build
          path: ./build

      - name: Attach build directory to release
        shell: pwsh
        run: |
          $ReleaseUrl = '${{ needs.build.outputs.create_release.upload_url }}'
          Get-ChildItem -Path ./build | ForEach-Object {
            $FilePath = $_.FullName
            Write-Host "Uploading $FilePath to release"
            Invoke-RestMethod -Uri "$ReleaseUrl?name=$($_.Name)" -Method Post -Headers @{
              Authorization = "token $env:GITHUB_TOKEN"
              "Content-Type" = "application/octet-stream"
            } -InFile $FilePath
          }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
